name: Deploy AWS Lambda Function
# Trigger workflow on push to main or pull request

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
       
jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    # Add permissions needed for OIDC authentication with AWS
    permissions:
      id-token: write
      contents: read
       
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install dependencies and build Lambda function
        run: |
          npm ci
          npm run build
        
      - name: Checkout private action
        uses: actions/checkout@v3
        with:
          repository: chloe1818/lambda-github-action
          ref: main
          token: ${{ secrets.PAT_TOKEN }}
          path: .github/actions/lambda-github-action
      
      - name: Install and build GitHub Action
        working-directory: .github/actions/lambda-github-action
        run: |
          npm ci
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::660753258521:role/GitHubActionsDeployRole
          aws-region: us-west-2
    
      - name: Deploy Lambda
        uses: ./.github/actions/lambda-github-action
        with:
          function-name: test-lambda
          code-artifacts-dir: ./dist
          role: arn:aws:iam::660753258521:role/lambda-test-execution-role
          architectures: arm64
          # code-signing-config-arn: ""
          # dead-letter-config: '{"TargetArn": "arn:aws:sns:us-west-2:660753258521:lambda-errors"}'
          # function-description: "This is to test the lambda function."
          # environment: '{"Variables":{"NODE_ENV":"production"}}'
          ephemeral-storage: 512
          file-system-configs: "[]"
          handler: "index.handler"
          image-config: ""
          kms-key-arn: ""
          source-kms-key-arn: ""
          revision-id: ""
          layers: "[]"
          logging-config: '{"LogFormat":"JSON","ApplicationLogLevel":"INFO","SystemLogLevel":"INFO"}'
          snap-start: '{"ApplyOn":"PublishedVersions"}'
          # tags: '{"Project":"LambdaTest","Environment":"Test","Owner":"DevOps"}'
          # timeout: 5
          # tracing-config: '{"Mode":"Active"}'
          # vpc-config: '{"SubnetIds": ["subnet-12345678", "subnet-87654321"], "SecurityGroupIds": ["sg-12345678"]}'
          region: us-west-2
          memory-size: 512
          dry-run: false
          publish: true
          runtime: nodejs20.x
